{"version":3,"sources":["components/UI/Input/Input.styled.js","components/UI/Input/Input.jsx","components/UI/Button/Button.styled.js","components/UI/Button/Button.jsx","components/Intro/IntroductionPage.styled.js","components/Intro/IntroductionPage.jsx","lang/lang.js","components/Settings/Settings.styled.js","components/Settings/Settings.jsx","components/UI/AddButton/AddButton.styled.js","components/UI/AddButton/AddButton.jsx","components/UI/TodoAddInput/TodoAppInput.styled.js","components/UI/TodoAddInput/TodoAddInput.jsx","components/TodoCreation/TodoCreation.styled.js","components/TodoCreation/TodoCreation.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/TodoList/TodoList.styled.js","components/TodoList/TodoList.jsx","components/Home/HomePage.styled.js","components/Home/HomePage.jsx","customHooks/useDate.js","App.jsx","index.js"],"names":["InputStyled","styled","input","_templateObject","Object","taggedTemplateLiteral","Input","props","_useState","useState","_useState2","slicedToArray","inputValue","setInputValue","react_default","a","createElement","Fragment","value","title","onChange","e","target","test","getInputValue","console","log","ButtonStyled","button","Button_styled_templateObject","success","danger","localStorage","getItem","SuccessButton","onClick","text","IntroductionPageWrapper","div","IntroductionPage_styled_templateObject","IntroductionPageLogo","span","_templateObject2","IntroductionPageDescription","_templateObject3","IntrodutionPageActionWrapper","_templateObject4","IntroductionPageActionButtons","_templateObject5","IntroductionPage","navigate","useNavigate","UI_Input_Input","Button","setItem","replace","lang","en","settingsTitle","todoInputPlaceHolder","clear","clearAll","addTodo","yes","no","modal","back","settings","info","selectLanguage","selectLangPlaceholder","selectTheme","selectThemePlaceholder","noOptions","uk","SettingsWrapperStyled","Settings_styled_templateObject","BackStyled","Settings_styled_templateObject2","SettingsMainStyled","Settings_styled_templateObject3","InfoStyled","Settings_styled_templateObject4","MainStyled","Settings_styled_templateObject5","LanguageSelectStyled","_templateObject6","ThemeSelectStyled","_templateObject7","Settings","selectStyles","control","base","state","_objectSpread2","objectSpread","boxShadow","defineProperty","isFocused","borderColor","minHeight","option","backgroundColor","color","isSelected","&:hover","@media screen and (max-width: 576px)","padding","placeholder","menu","setLanguage","_useState3","_useState4","langState","useEffect","NoOptionsMessage","index_a7690a33_esm","window","location","reload","className","react_select_esm","options","label","styles","isClearable","handleSelectLanguageChange","components","handleSelectThemeChange","AddButtonStyled","AddButton_styled_templateObject","AddButton","TodoAddInputStyled","TodoAppInput_styled_templateObject","TodoAddInput","type","onInput","onKeyDown","TodoCreationWrapperStyled","TodoCreation_styled_templateObject","TodoCreation","setInput","todoList","setTodoList","JSON","parse","handleClick","concat","toConsumableArray","id","uuidv4","completed","creationDate","Date","now","length","stringify","UI_TodoAddInput_TodoAddInput","key","UI_AddButton_AddButton","ModalStyled","Modal_styled_templateObject","ModalBackgroundStyled","Modal_styled_templateObject2","ModalBackgroundClickedStyled","Modal_styled_templateObject3","ModalWindowStyled","Modal_styled_templateObject4","CloseWrapperStyled","Modal_styled_templateObject5","Close","Modal_styled_templateObject6","Modal_styled_templateObject7","MainStyledText","_templateObject8","MainStyledTitle","_templateObject9","MainStyledActions","_templateObject10","Modal","open","closeBtn","onClose","Modal_styled_MainStyled","onConfirm","TodoListWrapperStyled","TodoList_styled_templateObject","TodoListStyled","TodoList_styled_templateObject2","TodoListItemStyled","TodoList_styled_templateObject3","Index","TodoList_styled_templateObject4","Text","TodoList_styled_templateObject5","TodoList","modalIsOpened","setModalIsOpened","_useState5","_useState6","document","body","style","overflowY","map","item","index","todoItemIndex","findIndex","todo","splice","handleTodoListItemClick","components_Modal_Modal","overflow","removeItem","HomePageWrapper","HomePage_styled_templateObject","HomePageHeader","HomePage_styled_templateObject2","HeaderTime","HomePage_styled_templateObject3","HomePageMain","HomePage_styled_templateObject4","HomePageMenuHeaderStyled","HomePage_styled_templateObject5","LogoStyled","HomePage_styled_templateObject6","SettingsStyled","HomePage_styled_templateObject7","HomePage","setUserName","settingsIsOpen","setSettingsIsOpen","_useDate","todayDate","setTodayDate","timer","setInterval","clearInterval","hour","getHours","minutes","getMinutes","seconds","getSeconds","date","getDate","month","getMonth","fullYear","getFullYear","time","fullDate","useDate","components_Settings_Settings","components_TodoCreation_TodoCreation","components_TodoList_TodoList","App","documentElement","setAttribute","react_router","path","element","Intro_IntroductionPage","Home_HomePage","ReactDOM","createRoot","getElementById","render","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.6e11a472.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const InputStyled = styled.input`\n    border: 3px solid transparent;\n    outline: none;\n    font-size: 40px;\n    padding: 10px 15px;\n    border-radius: 20px;\n    font-family: 'Rubik', sans-serif;\n    box-shadow: 0 2px 3px hsl(0deg 0% 0% / 0.3);\n\n    &:focus {\n        border: 3px solid #E0AE4A;\n        box-shadow: none;\n    }\n\n    @media screen and (max-width: 576px){\n        font-size: 30px;\n    }\n`;","import React from 'react';\nimport {useState} from 'react';\n\nimport { InputStyled } from './Input.styled';\n\nconst Input = (props) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (value) => {\n        const onlyLetters = /^[A-Za-z\\s]*$/gi.test(value);\n\n        if(onlyLetters) {\n            setInputValue(value);\n            props.getInputValue(value)\n        }  else {\n            console.log('Error in input');\n            setInputValue('');\n        }\n    }\n\n    return <>\n        <InputStyled \n            value={inputValue}\n            title={props.title} \n            onChange={e => handleInputChange(e.target.value)}\n        ></InputStyled>\n    </>\n}\n\nexport default Input;","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n\n    outline: none;\n    border: none;\n    background-color: ${function(props) {\n        if(props.success) {\n            return '#51AB76'\n        } else if(props.danger) {\n            return '#D74444'\n        } else {\n            return 'grey'\n        }\n    }};\n    color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return 'black';\n                    break;\n                case 'light':\n                    return 'white';\n                    break;\n                default:\n                    return 'white';\n            }\n        }};\n    font-size: 20px;\n    font-weight: 700;\n    padding: 10px;\n    border-radius: 15px;\n    box-shadow: 0 2px 3px hsl(0deg 0% 0% / 0.3);\n    transition: .3s ease all;\n\n    &:hover {\n        opacity: .4;\n    }\n\n    &:focus {\n        transition: 0s;\n        outline: 3px solid #A7A7A7;\n    }\n\n    @media screen and (max-width: 576px){\n        font-size: 18px;\n    }\n`;","import React from 'react';\n\nimport {ButtonStyled} from './Button.styled';\n\nconst SuccessButton = (props) => {\n    return <>\n        <ButtonStyled \n            success={props.success}\n            danger={props.danger}\n            onClick={props.onClick}\n        >{props.text}</ButtonStyled>\n    </>\n}\n\nexport default SuccessButton;","import styled from 'styled-components';\n\nconst lightRed = '#DE3E4D';\n\nexport const IntroductionPageWrapper = styled.div`\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px 0px;\n    height: calc(100vh - 20px);\n    width: 100%;\n\n    @media screen and (max-width: 992px){\n        padding: 10px 15px;\n        width: calc(100% - 30px);\n    }\n`;\n\nexport const IntroductionPageLogo = styled.span`\n    color: ${lightRed};\n    font-weight: 700;\n    font-size: 35px;\n\n    @media screen and (max-width: 576px) {\n        font-size: 30px;\n    }\n`;\n\nexport const IntroductionPageDescription = styled.span`\n    color: #898989;\n    font-style: italic;\n`;\n\nexport const IntrodutionPageActionWrapper = styled.div`\n    display: inline-flex;\n    flex-direction: column;\n    font-size: 25px;\n    font-family: 'Rubik', sans-serif;\n    \n    & > span {\n        align-self: flex-start;\n        font-weight: 500;\n\n        &:nth-child(1) {\n            margin: 0px 0px 5px 0px;\n        }\n\n        &:nth-child(2) {\n            font-size:18px;\n            color: grey;\n            margin: 0px 0px 30px 0px;\n\n            & > i {\n                font-style: normal;\n                font-weight: 500;\n                color: ${lightRed} ;\n            }\n        }\n    }\n\n    & > button {\n        align-self: center;\n    }\n\n    @media screen and (max-width: 576px){\n        width: 100%;\n    }\n`;\n\nexport const IntroductionPageActionButtons = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0px 0px 0px;\n\n    & > button {\n        margin: 0px 15px;\n    }\n`;","import React, { useState } from 'react';\nimport {useNavigate} from 'react-router-dom';\n\nimport Input from '../UI/Input/Input';\nimport Button from '../UI/Button/Button';\n\nimport { IntroductionPageWrapper, IntroductionPageLogo, IntroductionPageDescription, IntrodutionPageActionWrapper, IntroductionPageActionButtons } from './IntroductionPage.styled';\n\nconst IntroductionPage = () => {\n    const [inputValue, setInputValue] = useState('');\n    const navigate = useNavigate();\n\n    const getInputValue = (value) => {\n        setInputValue(value);\n      };\n\n    const handleSubmitClick = () => {\n        if(inputValue) {\n            localStorage.setItem('userName', inputValue);\n            navigate('/', {replace: true})\n        }else {\n            console.log('input should not to be empty')\n        }\n    }\n\n    const handleSkipClick = () => {\n        localStorage.setItem('skippedIntro', true);\n        navigate('/', {replace: true})\n    }\n\n    return <>\n        <IntroductionPageWrapper>\n            <IntroductionPageLogo>Todo App</IntroductionPageLogo>\n            <IntrodutionPageActionWrapper>\n                <span>Let's get acquainted!</span>\n                <span>Provide your name in the input below <i>OR</i> you can skip it if you want to be anonymus</span>\n                <Input \n                    title='Note: Only latin letters'\n                    getInputValue={getInputValue}\n                    />\n                <IntroductionPageActionButtons>\n                <Button \n                    text='SUBMIT'\n                    success\n                    onClick={handleSubmitClick}\n                    />\n                <Button \n                    text='SKIP'\n                    danger\n                    onClick={handleSkipClick}\n                    />\n                </IntroductionPageActionButtons>\n            </IntrodutionPageActionWrapper>\n            <IntroductionPageDescription>Simplicity in your daily tasks managing</IntroductionPageDescription>\n        </IntroductionPageWrapper>\n    </>\n}\n\nexport default IntroductionPage;","const lang = {\n    en: {\n        settingsTitle: 'Settings',\n        todoInputPlaceHolder: 'Type a name of todo here...',\n        clear: 'Clear',\n        clearAll: 'Clear All',\n        addTodo: 'Add todo',\n        yes: 'Yes',\n        no: 'No',\n        modal: {\n            text: 'Are you sure?',\n            title: 'If you confirm this action, todo list will be completely deleted'\n        },\n        back: 'Back',\n        settings: {\n            info: \"Don't clear the localStorage of application in developer tools, otherwise your todo list will be completely deleted\",\n            selectLanguage: 'Select language:',\n            selectLangPlaceholder: 'Language',\n            selectTheme: 'Select color of theme:',\n            selectThemePlaceholder: 'Color'\n        },\n        noOptions: 'No options'\n    },\n    uk: {\n        settingsTitle: 'Налаштування',\n        todoInputPlaceHolder: 'Введіть назву завдання тут...',\n        clear: 'Видалити',\n        clearAll: 'Видалити Всі',\n        addTodo: 'Додати завдання',\n        yes: 'Так',\n        no: 'Ні',\n        modal: {\n            text: 'Ви впевнені?',\n            title: 'Якщо ви підтвердите цю дію, список задач буде повністю видалено'\n        },\n        back: 'Назад',\n        settings: {\n            info: 'Не видаляйте localStorage додатку у панелі розробника, інакше ваш список задач буде повністю видалено',\n            selectLanguage: 'Оберіть мову:',\n            selectLangPlaceholder: 'Мова',\n            selectTheme: 'Оберіть колір теми',\n            selectThemePlaceholder: 'Колір'\n        },\n        noOptions: 'Немає варіантів'\n    }\n}\n\nexport default lang;","import styled from 'styled-components';\n\nexport const SettingsWrapperStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    \n`;\n\nexport const BackStyled = styled.div`\n    \n    & > button {\n        background: none;\n        outline: none;\n        border: none;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 5px;\n        border-radius: 10px;\n        transition: .3s ease all;\n\n        & > span {\n        color: #FF5733;\n        font-family: 'Rubik', sans-serif;\n        font-size: 20px;\n\n        &:nth-child(1) {\n            margin: 0px 10px 0px 0px;\n\n            @media screen and (max-width: 576px){\n                margin: 0px;\n            }\n        }\n\n        &:nth-child(2) {\n            @media screen and (max-width: 576px){\n                display: none;\n            }\n        }\n\n        }\n\n        &:hover {\n            background-color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return '#414141';\n                    break;\n                case 'light':\n                    return '#E7D5C6';\n                    break;\n                default:\n                    return '#E7D5C6';\n            }\n        }};\n        }\n    }\n`;\n\nexport const SettingsMainStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const InfoStyled = styled.div`\n    align-self: center;\n    display: flex;\n    align-items: center;\n\n    & > span {\n        &:nth-child(1) {\n            color: #f0a000;\n            font-size: 25px;\n            margin: 0px 10px 0px 0px;\n\n            @media screen and (max-width: 576px){\n                font-size: 20px;\n            }\n        }\n\n        &:nth-child(2) {\n            font-size: 20px;\n            color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return '#bebebe';\n                    break;\n                case 'light':\n                    return '#858585';\n                    break;\n                default:\n                    return '#858585';\n            }\n        }};\n\n            @media screen and (max-width: 576px){\n                font-size: 18px;\n            }\n        }\n    }\n\n    @media screen and (max-width: 992px){\n        margin: 30px 0px 0px 0px;\n    }\n`;\n\nexport const MainStyled = styled.div`\n    margin: 40px 0px 0px 0px;\n`;\n\nexport const LanguageSelectStyled = styled.div`\n    & > span {\n        display: inline-block;\n        margin: 0px 0px 5px 0px;\n        font-weight: 500;\n\n        &:nth-child(1) {\n            color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return 'white';\n                    break;\n                case 'light':\n                    return 'black';\n                    break;\n                default:\n                    return 'black';\n            }\n        }};\n        }\n\n        @media screen and (max-width: 576px){\n            margin: 0px 0px 10px 0px;\n        }\n    }\n\n    & > div {\n        width: 100%;\n        max-width: 265px;\n\n        @media screen and (max-width: 576px){\n            max-width: 100%;\n        }\n    }\n`;\n\nexport const ThemeSelectStyled = styled(LanguageSelectStyled)`\n    margin: 25px 0px 0px 0px;\n`;","import React, { useEffect, useState } from 'react';\n\nimport lang from '../../lang/lang';\n\nimport Select, {components} from 'react-select';\n\nimport { BackStyled, InfoStyled, LanguageSelectStyled, MainStyled, SettingsMainStyled, SettingsWrapperStyled, DefaultLanguageStyled, ThemeSelectStyled } from './Settings.styled';\n\nconst Settings = () => {\n    const optionsLanguage = [\n        {value: 'uk', label: 'Українська'},\n        {value: 'en', label: 'English'},\n    ];\n    const optionsTheme = [\n        {value: 'dark', label: 'Dark'},\n        {value: 'light', label: 'Light'}\n    ];\n    const selectStyles = {\n        control: (base, state) => ({\n            ...base,\n            boxShadow: '0',\n            boxShadow: state.isFocused ? '0 0 0 1px #FF5733' : 'hsl(0, 0%, 80%)',\n            borderColor: state.isFocused ? '#FF5733' : 'hsl(0, 0%, 80%)',\n            backgroundColor: (localStorage.getItem('theme') === 'dark') ? 'black' : 'white',\n            '&:hover': {\n                borderColor: state.isFocused ? '#FF5733' : 'hsl(0, 0%, 80%)'\n            },\n            \"@media screen and (max-width: 576px)\": {\n                minHeight: '60px'\n            }\n        }),\n        option: (base, state) => ({\n            ...base,\n            backgroundColor: (localStorage.getItem('theme') === 'dark') ? 'black' : 'white',\n            color: state.isSelected ? 'red' : (localStorage.getItem('theme') === 'dark') ? 'hsl(0deg 0% 83%)' : 'hsl(0, 0%, 20%)',\n            '&:hover': {\n                color: '#FF5733'\n            },\n            \"@media screen and (max-width: 576px)\": {\n                padding: '20px 12px'\n            }\n        }),\n        placeholder: (base, state) => ({\n            ...base,\n            color: (localStorage.getItem('theme') === 'dark') ? 'hsl(0deg 0% 83%)' : 'hsl(0, 0%, 20%)'\n        }),\n        menu: (base, state) => ({\n            ...base,\n            backgroundColor: (localStorage.getItem('theme') === 'dark') ? 'black' : 'white'\n        })\n    }\n    const [language, setLanguage] = useState('');\n    const [langState, setLangState] = useState(localStorage.getItem('language') || 'en')\n\n\n    const handleBackClick = () => {\n        localStorage.setItem('settingsIsOpen', false);\n        window.location.reload();\n    }\n\n    const handleSelectLanguageChange = (e) => {\n        if(e) {\n            localStorage.setItem('language', e.value);\n            window.location.reload();\n        }\n    }\n\n    const handleSelectThemeChange = (e) => {\n        if(e) {\n            localStorage.setItem('theme', e.value);\n            window.location.reload();\n        }\n    }\n\n    useEffect(() => {\n        if(localStorage.getItem('language')) {\n            setLanguage(localStorage.getItem('language'));\n        }\n    }, []);\n\n    const NoOptionsMessage = props => {\n        return (\n          <components.NoOptionsMessage {...props}>\n            <span>{langState === 'uk' ? lang.uk.noOptions : lang.en.noOptions}</span> \n          </components.NoOptionsMessage>\n        );\n      };\n\n    return <>\n        <SettingsWrapperStyled>\n            <BackStyled>\n                <button onClick={handleBackClick}>\n                    <span className='icon-arrow-back'></span>\n                    <span>{langState === 'uk' ? lang.uk.back : lang.en.back}</span>\n                </button>\n            </BackStyled>\n            <SettingsMainStyled>\n                <InfoStyled>\n                    <span className='icon-info'></span>\n                    <span>{langState === 'uk' ? lang.uk.settings.info : lang.en.settings.info}</span>\n                </InfoStyled>\n                    <MainStyled>\n                        <LanguageSelectStyled>\n                            <span>{langState === 'uk' ? lang.uk.settings.selectLanguage : lang.en.settings.selectLanguage}</span>\n                            <div>\n                                <Select \n                                    options={optionsLanguage} \n                                    className='custom-select'\n                                    styles={selectStyles}\n                                    isClearable={false}\n                                    onChange={(e) => handleSelectLanguageChange(e)}\n                                    placeholder={langState === 'uk' ? lang.uk.settings.selectLangPlaceholder : lang.en.settings.selectLangPlaceholder}\n                                    components={{NoOptionsMessage}}\n                                />\n                            </div>\n                        </LanguageSelectStyled>\n                        <ThemeSelectStyled>\n                        <span>{langState === 'uk' ? lang.uk.settings.selectTheme : lang.en.settings.selectTheme}</span>\n                            <div>\n                                <Select \n                                    options={optionsTheme} \n                                    className='custom-select'\n                                    styles={selectStyles}\n                                    isClearable={false}\n                                    onChange={(e) => handleSelectThemeChange(e)}\n                                    placeholder={langState === 'uk' ? lang.uk.settings.selectThemePlaceholder : lang.en.settings.selectThemePlaceholder}\n                                    components={{NoOptionsMessage}}\n                                />\n                            </div>\n                        </ThemeSelectStyled>\n                    </MainStyled>\n            </SettingsMainStyled>\n        </SettingsWrapperStyled>\n    </>;\n}\n\nexport default Settings;","import styled from 'styled-components';\n\nexport const AddButtonStyled = styled.button`\n    background: none;\n    border: none;\n    outline: none;\n    font-size: 80px;\n    color: #51AB76;\n    transition: .3s ease all;\n\n    &:hover {\n        opacity: .3;\n    }\n\n    @media screen and (max-width: 768px){\n        font-size: 60px;\n    }\n\n    @media screen and (max-width: 576px){\n        font-size: 40px;\n    }\n`;","import React, {useState} from 'react';\n\nimport lang from '../../../lang/lang';\n\nimport { AddButtonStyled } from './AddButton.styled';\n\nconst AddButton = (props) => {\n    const [langState, setLangState] = useState(localStorage.getItem('language') || 'en')\n\n    return <>\n        <AddButtonStyled\n            onClick={props.onClick}\n        >\n            <span \n                className='icon-add-sign'\n                title={langState === 'uk' ? lang.uk.addTodo : lang.en.addTodo}\n            ></span>\n        </AddButtonStyled>\n    </>\n}\n\nexport default AddButton;","import styled from 'styled-components';\n\nexport const TodoAddInputStyled = styled.input`\n    outline: none;\n    border: none;\n    background-color: transparent;\n    border-bottom: 2px solid #9D9D9D;\n    font-size: 50px;\n    width: 900px;\n    padding:10px 15px;\n    font-family: 'Rubik', sans-serif;\n    color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return 'white';\n                    break;\n                case 'light':\n                    return 'black';\n                    break;\n                default:\n                    return 'black';\n            }\n        }};\n\n    &::placeholder {\n        color: #C6C6C6;\n    }\n\n    @media screen and (max-width: 768px){\n        font-size: 40px;\n    }\n\n    @media screen and (max-width: 576px){\n        width: 100%;\n        font-size: 20px;\n    }\n`;","import React, {useState} from 'react';\n\nimport lang from '../../../lang/lang';\n\nimport { TodoAddInputStyled } from './TodoAppInput.styled';\n\nconst TodoAddInput = (props) => {\n    const [langState, setLangState] = useState(localStorage.getItem('language') || 'en')\n\n    return <>\n        <TodoAddInputStyled\n            type={props.type}\n            value={props.value}\n            onInput={props.onInput}\n            placeholder={langState === 'uk' ? lang.uk.todoInputPlaceHolder : lang.en.todoInputPlaceHolder}\n            onKeyDown={props.onKeyDown}\n        />\n    </>\n};\n\nexport default TodoAddInput;","import styled from 'styled-components';\n\nexport const TodoCreationWrapperStyled = styled.div`\n   display: flex;\n   align-items: flex-start;\n   justify-content: center;\n   width: 100%;\n   height: 101px;\n   margin: 0px 0px 60px 0px;\n`;","import React from 'react';\nimport { useState, useEffect } from \"react\";\n\nimport AddButton from '../UI/AddButton/AddButton';\nimport TodoAddInput from '../UI/TodoAddInput/TodoAddInput';\n\nimport { TodoCreationWrapperStyled } from './TodoCreation.styled';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TodoCreation = () => {\n    const [input, setInput] = useState('');\n    const [todoList, setTodoList] = useState([]);\n\n    useEffect(() => {\n      if(localStorage.getItem('todoList')) {\n        setTodoList(JSON.parse(localStorage.getItem('todoList')));\n      }\n    }, [])\n\n\n  const handleClick = () => {\n    if(input) {\n      setTodoList([\n        ...todoList,\n        {\n          id: uuidv4(),\n          text: input,\n          completed: false,\n          creationDate: `${Date.now()}`\n        }\n      ]);\n\n      setInput('');\n    }\n  }\n\n  const handleEnterPress = (e) => {\n    if(e.key === 'Enter') {\n      handleClick();\n    }\n  }\n\n  useEffect(() => {\n    if(todoList.length > 0) {\n      localStorage.setItem('todoList', JSON.stringify(todoList));\n    }\n  }, [todoList])\n\n    return <>\n      <TodoCreationWrapperStyled>\n      <TodoAddInput \n        type=\"text\"\n        value={input}\n        onInput={e => setInput(e.target.value)}\n        onKeyDown={handleEnterPress}\n      />\n      {\n        (input.length > 0) ? <AddButton \n        onClick={() => handleClick()}\n      /> : null\n      }\n      </TodoCreationWrapperStyled>\n    </>\n}\n\nexport default TodoCreation;","import styled from 'styled-components';\n\nexport const ModalStyled = styled.div`\n    position: fixed;\n    top:0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n`;\n\nexport const ModalBackgroundStyled = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return 'white';\n                    break;\n                case 'light':\n                    return 'black';\n                    break;\n                default:\n                    return 'black';\n            }\n        }};\n    opacity: .7;\n`;\n\nexport const ModalBackgroundClickedStyled = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n`;\n\nexport const ModalWindowStyled = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return 'black';\n                    break;\n                case 'light':\n                    return 'white';\n                    break;\n                default:\n                    return 'white';\n            }\n        }};\n    z-index: 1000;\n    padding: 15px 35px;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (max-width: 768px){\n        width: 80%;\n    }\n\n    @media screen and (max-width: 576px){\n        padding: 15px 25px;\n    }\n`;\n\nexport const CloseWrapperStyled = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nexport const Close = styled.button`\n    border: none;\n    background: none;\n    outline: none;\n    transition: .3s ease all;\n    position: relative;\n    left: 25px;\n    bottom: 5px;\n\n    & > span {\n        font-size: 25px;\n        color: grey;\n    }\n\n    &:hover {\n        opacity: .7;\n    }\n`;\n\nexport const MainStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const MainStyledText = styled.div`\n    font-size: 30px;\n    margin: 0px 0px 15px 0px;\n\n    & > span {\n        font-weight: 500;\n        color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return 'white';\n                    break;\n                case 'light':\n                    return 'black';\n                    break;\n                default:\n                    return 'black';\n            }\n        }}\n    }\n`;\n\nexport const MainStyledTitle = styled.div` \n    margin: 0px 0px 15px 0px;\n    align-self: flex-start;\n    text-align: left;\n    font-size: 14px;\n    color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return '#bebebe';\n                    break;\n                case 'light':\n                    return '#858585';\n                    break;\n                default:\n                    return '#858585';\n            }\n        }};\n\n    & > span {\n        font-style: italic;\n    }\n`;\n\nexport const MainStyledActions = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 120px;\n`;","import React, { useEffect, useState } from 'react';\n\nimport lang from '../../lang/lang';\n\nimport Button from '../UI/Button/Button';\n\nimport { ModalBackgroundStyled, ModalStyled, ModalBackgroundClickedStyled, ModalWindowStyled, CloseWrapperStyled, MainStyled, MainStyledText, MainStyledActions, Close, MainStyledTitle } from './Modal.styled';\n\nconst Modal = (props) => {\n    const {open} = props;\n    const {closeBtn} = props;\n    const [langState, setLangState] = useState(localStorage.getItem('language') || 'en')\n\n    \n    const confirm = () => {\n        props.onConfirm();\n        props.onClose();\n    }\n\n    return open ? <>\n    <ModalStyled>\n        <ModalBackgroundStyled></ModalBackgroundStyled>\n        <ModalBackgroundClickedStyled onClick={props.onClose}></ModalBackgroundClickedStyled>\n            <ModalWindowStyled>\n                    {\n                        closeBtn ? <CloseWrapperStyled>\n                        <Close onClick={props.onClose}>\n                            <span className='icon-cancel-circle'></span>\n                        </Close>\n                    </CloseWrapperStyled> : null\n                    }\n                    <MainStyled>\n                        <MainStyledText>\n                            <span>{props.text}</span>\n                        </MainStyledText>\n                        <MainStyledTitle>\n                            <span>{props.title}</span>\n                        </MainStyledTitle>\n                        <MainStyledActions>\n                            <Button \n                                success\n                                text={langState === 'uk' ? lang.uk.yes : lang.en.yes}\n                                onClick={confirm}\n                            />\n                            <Button \n                                danger\n                                text={langState === 'uk' ? lang.uk.no : lang.en.no}\n                                onClick={props.onClose}\n                            />\n                        </MainStyledActions>\n                    </MainStyled>\n            </ModalWindowStyled>\n    </ModalStyled>\n</> : null;\n}\n\nexport default Modal;","import styled from 'styled-components';\n\nexport const TodoListWrapperStyled = styled.div`\n    align-self: flex-start;\n    width: 100%;\n`;\n\nexport const TodoListStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    & > button {\n        align-self: flex-end;\n    }\n`;\n\nexport const TodoListItemStyled = styled.div`\n    font-size: 30px;\n    border-bottom: 1px solid #C5C5C5;\n    padding: 15px 0px;\n    text-decoration: ${props  => props.completed ? 'line-through' : 'none'};\n    color: ${function(props) {\n        if(props.completed) {\n            return '#FF8484'\n        } else if(localStorage.getItem('theme') === 'dark' && !props.completed) {\n            return 'white'\n        } else {\n            return 'initial'\n        }\n    }};\n    cursor: pointer;\n\n    &:hover {\n       span{\n           &:nth-child(1) {\n               color: #FF5733;\n           }\n       }\n    }\n\n    & > span {\n        font-weight: 500;\n    }\n\n    @media screen and (max-width: 576px){\n        font-size: 23px;\n    }\n`;\n\nexport const Index = styled.span`\n    color: #A9A9A9;\n    min-width: 30px;\n    display: inline-block;\n`;\n\nexport const Text = styled.span`\n    margin: 0px 0px 0px 10px;\n`;","import React, { useEffect, useState } from 'react';\n\nimport lang from '../../lang/lang';\n\nimport Button from '../UI/Button/Button';\nimport Modal from '../Modal/Modal';\n\nimport { TodoListStyled, TodoListWrapperStyled, TodoListItemStyled, Index, Text } from './TodoList.styled';\n\nconst TodoList = () => {\n    const [todoList, setTodoList] = useState(JSON.parse(localStorage.getItem('todoList')) || []);\n    const [modalIsOpened, setModalIsOpened] = useState(false);\n    const [langState, setLangState] = useState(localStorage.getItem('language') || 'en')\n\n\n    useEffect(() => {\n        if(localStorage.getItem('todoList')) {\n            setTodoList(JSON.parse(localStorage.getItem('todoList')));\n        } else {\n            setTodoList([]);\n        }\n    }, [localStorage.getItem('todoList')]);\n\n    const handleClearAllClick = () => {\n        document.body.style.overflowY = 'hidden';\n        setModalIsOpened(true);\n    }\n\n    const closeModal = () => {\n        document.body.style.overflow = 'auto';\n        setModalIsOpened(false);\n    }\n\n    const handleConfirm = () => {\n        localStorage.removeItem('todoList');\n        document.location.reload();\n    }\n\n    const handleTodoListItemClick = item => {\n        item.completed = !item.completed;\n        \n        let todoList = JSON.parse(localStorage.getItem('todoList'));\n        const id = item.id;\n        const todoItemIndex = todoList.findIndex(todo => todo.id === id);\n        \n        todoList.splice(todoItemIndex, 1, item);\n        localStorage.setItem('todoList', JSON.stringify(todoList));\n    }\n\n    return <>\n        <TodoListWrapperStyled>\n           <TodoListStyled>\n               {todoList.length > 0 ? <Button \n                    danger\n                    text={todoList.length > 1 ? langState === 'uk' ? lang.uk.clearAll : lang.en.clearAll : langState === 'uk' ? lang.uk.clear : lang.en.clear}\n                    onClick={handleClearAllClick}\n               /> : null}\n               {todoList.map((item, index) => <TodoListItemStyled key={item.id} onClick={() => handleTodoListItemClick(item)} completed={item.completed}>\n                   <Index>{index + 1}.</Index>\n                    <Text>{item.text}</Text>\n               </TodoListItemStyled>)}  \n           </TodoListStyled>\n        </TodoListWrapperStyled>\n        <Modal \n            text={langState === 'uk' ? lang.uk.modal.text : lang.en.modal.text}\n            title={langState === 'uk' ? lang.uk.modal.title : lang.en.modal.title}\n            open={modalIsOpened}\n            onClose={closeModal}\n            closeBtn={false}\n            onConfirm={handleConfirm}\n        />\n    </>;\n}\n\nexport default TodoList;","import styled from 'styled-components';\n\nexport const HomePageWrapper = styled.div`\n    margin: 45px 0px 0px 0px;\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n    height: calc(100vh - 65px);\n`;\n\nexport const HomePageHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0px 0px 50px 0px;\n`;\n\n// export const HeaderGreeting = styled.div`\n//     & > span {\n//         font-size: 30px;\n//         font-weight: 700;\n\n//         @media screen and (max-width:576px){\n//             font-size: 20px;\n//         }\n//     }\n// `;\n\nexport const HeaderTime = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 0px 0px 0px auto;\n    /* width: 90px; */\n\n    & > span {\n        &:nth-child(1) {\n            color: #FF5733;\n            font-weight: 500;\n            font-size: 20px;\n            margin: 0px 0px 5px 0px;\n            width: 85px;\n\n            @media screen and (max-width: 576px){\n                font-size: 14px;\n                width: 60px;\n            }\n        }\n\n        &:nth-child(2) {\n            color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return '#bebebe';\n                    break;\n                case 'light':\n                    return '#858585';\n                    break;\n                default:\n                    return '#858585';\n            }\n        }};\n            font-size: 14px;\n            width: 80px;\n\n            @media screen and (max-width: 576px){\n                font-size: 10px;\n                width: 55px;\n            }\n        }\n    }\n`;\n\nexport const HomePageMain = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const HomePageMenuHeaderStyled = styled.div`\n    background-color: #FF5733;\n    position: fixed;\n    top: 0;\n    width: calc(100% - 20px);\n    height: 45px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0px 10px;\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 20px 30px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n`;\n\nexport const LogoStyled = styled.div`\n    & > span{\n        color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return 'black';\n                    break;\n                case 'light':\n                    return 'white';\n                    break;\n                default:\n                    return 'white';\n            }\n        }};\n        font-weight: 700;\n        font-size: 30px;\n    }\n`;\n\nexport const SettingsStyled = styled.div`\n    & > button {\n        border: none;\n        outline: none;\n        background: none;\n        transition: transform .7s ease;\n\n        & > span {\n            color: ${function() {\n            switch(localStorage.getItem('theme')) {\n                case 'dark':\n                    return 'black';\n                    break;\n                case 'light':\n                    return 'white';\n                    break;\n                default:\n                    return 'white';\n            }\n        }};\n            font-size: 27px;\n        }\n\n        &:hover {\n                transform: rotate(90deg);\n        }\n\n        @media screen and (max-width: 768px) {\n            animation: spin 5s linear infinite;\n\n            @keyframes spin {\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            &:hover {\n                transform: none;\n            }\n        }\n    }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDate } from '../../customHooks/useDate';\nimport Settings from '../Settings/Settings';\n\nimport TodoCreation from \"../TodoCreation/TodoCreation\";\nimport TodoList from '../TodoList/TodoList';\n\nimport lang from '../../lang/lang';\n\nimport { HomePageHeader, HomePageWrapper, HeaderGreeting, HeaderTime, HomePageMain, HomePageMenuHeaderStyled, LogoStyled, SettingsStyled } from './HomePage.styled';\n\nconst HomePage = () => {\n    const [userName, setUserName] = useState('');\n    const [settingsIsOpen, setSettingsIsOpen] = useState(false);\n    const {time, fullDate} = useDate();\n    const [langState, setLangState] = useState(localStorage.getItem('language') || 'en')\n\n    useEffect(() => {\n        if(localStorage.getItem('userName')) {\n            setUserName(localStorage.getItem('userName')) \n        }\n        if(localStorage.getItem('settingsIsOpen')) {\n            setSettingsIsOpen(JSON.parse(localStorage.getItem('settingsIsOpen')));\n        }\n    }, []);\n\n    const handleSettingsClick = () => {\n        setSettingsIsOpen(!settingsIsOpen);\n        localStorage.setItem('settingsIsOpen', !settingsIsOpen);\n    }\n\n    return <>\n    <HomePageMenuHeaderStyled>\n        <LogoStyled>\n            <span>Todo App</span>\n        </LogoStyled>\n        <SettingsStyled>\n            <button \n            title={langState === 'uk' ? lang.uk.settingsTitle : lang.en.settingsTitle}\n            onClick={handleSettingsClick}\n            >\n                <span className='icon-settings'></span>\n            </button>\n        </SettingsStyled>\n    </HomePageMenuHeaderStyled>\n    <HomePageWrapper>\n            <HomePageHeader>\n                {/* <HeaderGreeting>\n                <span>\n                    {\n                        userName ? `Hello, ${userName}! 👋` : 'Hello! 👋'\n                    }\n                </span>\n                </HeaderGreeting> */}\n                <HeaderTime>\n                    <span>{time}</span>\n                    <span>{fullDate}</span>\n                </HeaderTime>\n            </HomePageHeader>  \n            {\n                settingsIsOpen \n                    ? <Settings />\n                    : <HomePageMain>\n                        <TodoCreation />\n                        <TodoList />          \n                    </HomePageMain>\n            }\n    </HomePageWrapper>\n    </>\n}\n\nexport default HomePage;","import {useEffect, useState} from \"react\";\n\nexport const useDate = () => {\n    const [todayDate, setTodayDate] = useState(new Date());\n  \n    useEffect(() => {\n        const timer = setInterval(() => {\n        setTodayDate(new Date());\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      }\n    }, []);\n  \n    // time\n    const hour = (todayDate.getHours() < 10) ? `0${todayDate.getHours()}` : todayDate.getHours();\n    const minutes = (todayDate.getMinutes() < 10) ? `0${todayDate.getMinutes()}` : todayDate.getMinutes();\n    const seconds = (todayDate.getSeconds() < 10) ? `0${todayDate.getSeconds()}` : todayDate.getSeconds();\n    // date\n    const date = (todayDate.getDate() < 10) ? `0${todayDate.getDate()}` : todayDate.getDate();\n    const month = (todayDate.getMonth() + 1 < 10) ? `0${todayDate.getMonth() + 1}` : todayDate.getMonth() + 1;\n    const fullYear = todayDate.getFullYear();\n  \n    const time = `${hour}:${minutes}:${seconds}`;\n    const fullDate = `${date}/${month}/${fullYear}`\n  \n    return {\n      time,\n      fullDate\n    };\n  };","import React, { useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport IntroductionPage from \"./components/Intro/IntroductionPage\";\n\nimport HomePage from \"./components/Home/HomePage\";\n\nconst App = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if(!localStorage.getItem('skippedIntro') && !localStorage.getItem('userName')) {\n      navigate('/name_creation')\n    }\n\n    if(localStorage.getItem('language')) {\n      document.documentElement.setAttribute(\"lang\", localStorage.getItem('language'));\n    }\n\n    if(localStorage.getItem('theme')) {\n      switch(localStorage.getItem('theme')) {\n        case 'dark':\n          document.body.style.backgroundColor = '#232323';\n          break;\n        case 'light':\n          document.body.style.backgroundColor = 'rgb(235, 234, 232)';\n          break;\n        default:\n          document.body.style.backgroundColor = 'rgb(235, 234, 232)';\n      }\n    }\n  }, [])\n\n  return <>\n    <Routes>\n      <Route path='/name_creation' element={ <IntroductionPage />}></Route>\n      <Route path=\"/\" element={<HomePage />} />\n    </Routes>\n  </>\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <HashRouter>\n        <App />\n    </HashRouter>\n);\n\n"],"sourceRoot":""}