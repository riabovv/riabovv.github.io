{"version":3,"sources":["components/UI/Input/Input.styled.js","components/UI/Input/Input.jsx","components/UI/Button/Button.styled.js","components/UI/Button/Button.jsx","components/Intro/IntroductionPage.styled.js","components/Intro/IntroductionPage.jsx","components/UI/AddButton/AddButton.styled.js","components/UI/AddButton/AddButton.jsx","components/UI/TodoAddInput/TodoAppInput.styled.js","components/UI/TodoAddInput/TodoAddInput.jsx","components/TodoCreation/TodoCreation.styled.js","components/TodoCreation/TodoCreation.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/TodoList/TodoList.styled.js","components/TodoList/TodoList.jsx","components/Home/HomePage.styled.js","components/Home/HomePage.jsx","customHooks/useDate.js","App.jsx","index.js"],"names":["InputStyled","styled","input","_templateObject","Object","taggedTemplateLiteral","Input","props","_useState","useState","_useState2","slicedToArray","inputValue","setInputValue","react_default","a","createElement","Fragment","value","title","onChange","e","target","test","getInputValue","console","log","ButtonStyled","button","Button_styled_templateObject","success","danger","SuccessButton","onClick","text","IntroductionPageWrapper","div","IntroductionPage_styled_templateObject","IntroductionPageLogo","span","_templateObject2","IntroductionPageDescription","_templateObject3","IntrodutionPageActionWrapper","_templateObject4","IntroductionPageActionButtons","_templateObject5","IntroductionPage","navigate","useNavigate","UI_Input_Input","Button","localStorage","setItem","replace","AddButtonStyled","AddButton_styled_templateObject","AddButton","className","TodoAddInputStyled","TodoAppInput_styled_templateObject","TodoAddInput","type","onInput","placeholder","onKeyDown","TodoCreationWrapperStyled","TodoCreation_styled_templateObject","TodoCreation","setInput","_useState3","_useState4","todoList","setTodoList","useEffect","getItem","JSON","parse","handleClick","concat","toConsumableArray","id","uuidv4","completed","creationDate","Date","now","length","stringify","UI_TodoAddInput_TodoAddInput","key","UI_AddButton_AddButton","ModalStyled","Modal_styled_templateObject","ModalBackgroundStyled","Modal_styled_templateObject2","ModalBackgroundClickedStyled","Modal_styled_templateObject3","ModalWindowStyled","Modal_styled_templateObject4","CloseWrapperStyled","Modal_styled_templateObject5","Close","_templateObject6","MainStyled","_templateObject7","MainStyledText","_templateObject8","MainStyledTitle","_templateObject9","MainStyledActions","_templateObject10","Modal","open","closeBtn","onClose","onConfirm","TodoListWrapperStyled","TodoList_styled_templateObject","TodoListStyled","TodoList_styled_templateObject2","TodoListItemStyled","TodoList_styled_templateObject3","Index","TodoList_styled_templateObject4","Text","TodoList_styled_templateObject5","TodoList","modalIsOpened","setModalIsOpened","map","item","index","components_Modal_Modal","removeItem","document","location","reload","HomePageWrapper","HomePage_styled_templateObject","HomePageHeader","HomePage_styled_templateObject2","HeaderGreeting","HomePage_styled_templateObject3","HeaderTime","HomePage_styled_templateObject4","HomePageMain","HomePage_styled_templateObject5","HomePage","userName","setUserName","_useDate","todayDate","setTodayDate","timer","setInterval","clearInterval","hour","getHours","minutes","getMinutes","seconds","getSeconds","date","getDate","month","getMonth","fullYear","getFullYear","time","fullDate","useDate","components_TodoCreation_TodoCreation","components_TodoList_TodoList","App","react_router","path","element","Intro_IntroductionPage","Home_HomePage","ReactDOM","createRoot","getElementById","render","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.8bbc2587.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const InputStyled = styled.input`\n    border: 3px solid transparent;\n    outline: none;\n    font-size: 40px;\n    padding: 10px 15px;\n    border-radius: 20px;\n    font-family: 'Rubik', sans-serif;\n    box-shadow: 0 2px 3px hsl(0deg 0% 0% / 0.3);\n\n    &:focus {\n        border: 3px solid #E0AE4A;\n        box-shadow: none;\n    }\n\n    @media screen and (max-width: 576px){\n        font-size: 30px;\n    }\n`;","import React from 'react';\nimport {useState} from 'react';\n\nimport { InputStyled } from './Input.styled';\n\nconst Input = (props) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (value) => {\n        const onlyLetters = /^[A-Za-z\\s]*$/gi.test(value);\n\n        if(onlyLetters) {\n            setInputValue(value);\n            props.getInputValue(value)\n        }  else {\n            console.log('Error in input');\n            setInputValue('');\n        }\n    }\n\n    return <>\n        <InputStyled \n            value={inputValue}\n            title={props.title} \n            onChange={e => handleInputChange(e.target.value)}\n        ></InputStyled>\n    </>\n}\n\nexport default Input;","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n\n    outline: none;\n    border: none;\n    background-color: ${function(props) {\n        if(props.success) {\n            return '#51AB76'\n        } else if(props.danger) {\n            return '#D74444'\n        } else {\n            return 'grey'\n        }\n    }};\n    color: white;\n    font-size: 20px;\n    font-weight: 700;\n    padding: 10px;\n    border-radius: 15px;\n    box-shadow: 0 2px 3px hsl(0deg 0% 0% / 0.3);\n    transition: .3s ease all;\n\n    &:hover {\n        opacity: .4;\n    }\n\n    &:focus {\n        transition: 0s;\n        outline: 3px solid #A7A7A7;\n    }\n\n    @media screen and (max-width: 576px){\n        font-size: 18px;\n    }\n`;","import React from 'react';\n\nimport {ButtonStyled} from './Button.styled';\n\nconst SuccessButton = (props) => {\n    return <>\n        <ButtonStyled \n            success={props.success}\n            danger={props.danger}\n            onClick={props.onClick}\n        >{props.text}</ButtonStyled>\n    </>\n}\n\nexport default SuccessButton;","import styled from 'styled-components';\n\nconst lightRed = '#DE3E4D';\n\nexport const IntroductionPageWrapper = styled.div`\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px 0px;\n    height: calc(100vh - 20px);\n    width: 100%;\n\n    @media screen and (max-width: 992px){\n        padding: 10px 15px;\n        width: calc(100% - 30px);\n    }\n`;\n\nexport const IntroductionPageLogo = styled.span`\n    color: ${lightRed};\n    font-weight: 700;\n    font-size: 35px;\n\n    @media screen and (max-width: 576px) {\n        font-size: 30px;\n    }\n`;\n\nexport const IntroductionPageDescription = styled.span`\n    color: #898989;\n    font-style: italic;\n`;\n\nexport const IntrodutionPageActionWrapper = styled.div`\n    display: inline-flex;\n    flex-direction: column;\n    font-size: 25px;\n    font-family: 'Rubik', sans-serif;\n    \n    & > span {\n        align-self: flex-start;\n        font-weight: 500;\n\n        &:nth-child(1) {\n            margin: 0px 0px 5px 0px;\n        }\n\n        &:nth-child(2) {\n            font-size:18px;\n            color: grey;\n            margin: 0px 0px 30px 0px;\n\n            & > i {\n                font-style: normal;\n                font-weight: 500;\n                color: ${lightRed} ;\n            }\n        }\n    }\n\n    & > button {\n        align-self: center;\n    }\n\n    @media screen and (max-width: 576px){\n        width: 100%;\n    }\n`;\n\nexport const IntroductionPageActionButtons = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0px 0px 0px;\n\n    & > button {\n        margin: 0px 15px;\n    }\n`;","import React, { useState } from 'react';\nimport {useNavigate} from 'react-router-dom';\n\nimport Input from '../UI/Input/Input';\nimport Button from '../UI/Button/Button';\n\nimport { IntroductionPageWrapper, IntroductionPageLogo, IntroductionPageDescription, IntrodutionPageActionWrapper, IntroductionPageActionButtons } from './IntroductionPage.styled';\n\nconst IntroductionPage = () => {\n    const [inputValue, setInputValue] = useState('');\n    const navigate = useNavigate();\n\n    const getInputValue = (value) => {\n        setInputValue(value);\n      };\n\n    const handleSubmitClick = () => {\n        if(inputValue) {\n            localStorage.setItem('userName', inputValue);\n            navigate('/', {replace: true})\n        }else {\n            console.log('input should not to be empty')\n        }\n    }\n\n    const handleSkipClick = () => {\n        localStorage.setItem('skippedIntro', true);\n        navigate('/', {replace: true})\n    }\n\n    return <>\n        <IntroductionPageWrapper>\n            <IntroductionPageLogo>Todo App</IntroductionPageLogo>\n            <IntrodutionPageActionWrapper>\n                <span>Let's get acquainted!</span>\n                <span>Provide your name in the input below <i>OR</i> you can skip it if you want to be anonymus</span>\n                <Input \n                    title='Note: Only latin letters'\n                    getInputValue={getInputValue}\n                    />\n                <IntroductionPageActionButtons>\n                <Button \n                    text='SUBMIT'\n                    success\n                    onClick={handleSubmitClick}\n                    />\n                <Button \n                    text='SKIP'\n                    danger\n                    onClick={handleSkipClick}\n                    />\n                </IntroductionPageActionButtons>\n            </IntrodutionPageActionWrapper>\n            <IntroductionPageDescription>Simplicity in your daily tasks managing</IntroductionPageDescription>\n        </IntroductionPageWrapper>\n    </>\n}\n\nexport default IntroductionPage;","import styled from 'styled-components';\n\nexport const AddButtonStyled = styled.button`\n    background: none;\n    border: none;\n    outline: none;\n    font-size: 80px;\n    color: #51AB76;\n    transition: .3s ease all;\n\n    &:hover {\n        opacity: .3;\n    }\n\n    @media screen and (max-width: 768px){\n        font-size: 60px;\n    }\n\n    @media screen and (max-width: 576px){\n        font-size: 40px;\n    }\n`;","import React from 'react';\n\nimport { AddButtonStyled } from './AddButton.styled';\n\nconst AddButton = (props) => {\n    return <>\n        <AddButtonStyled\n            onClick={props.onClick}\n        >\n            <span \n                className='icon-add-sign'\n                title='Add todo'\n            ></span>\n        </AddButtonStyled>\n    </>\n}\n\nexport default AddButton;","import styled from 'styled-components';\n\nexport const TodoAddInputStyled = styled.input`\n    outline: none;\n    border: none;\n    background-color: transparent;\n    border-bottom: 2px solid #9D9D9D;\n    font-size: 50px;\n    width: 900px;\n    padding:10px 15px;\n    font-family: 'Rubik', sans-serif;\n\n    &::placeholder {\n        color: #C6C6C6;\n    }\n\n    @media screen and (max-width: 768px){\n        font-size: 40px;\n    }\n\n    @media screen and (max-width: 576px){\n        width: 100%;\n        font-size: 20px;\n    }\n`;","import React from 'react';\n\nimport { TodoAddInputStyled } from './TodoAppInput.styled';\n\nconst TodoAddInput = (props) => {\n    return <>\n        <TodoAddInputStyled\n            type={props.type}\n            value={props.value}\n            onInput={props.onInput}\n            placeholder='Type name of todo here...'\n            onKeyDown={props.onKeyDown}\n        />\n    </>\n};\n\nexport default TodoAddInput;","import styled from 'styled-components';\n\nexport const TodoCreationWrapperStyled = styled.div`\n   display: flex;\n   align-items: flex-start;\n   justify-content: center;\n   width: 100%;\n   height: 101px;\n   margin: 0px 0px 60px 0px;\n`;","import React from 'react';\nimport { useState, useEffect } from \"react\";\n\nimport AddButton from '../UI/AddButton/AddButton';\nimport TodoAddInput from '../UI/TodoAddInput/TodoAddInput';\n\nimport { TodoCreationWrapperStyled } from './TodoCreation.styled';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TodoCreation = () => {\n    const [input, setInput] = useState('');\n    const [todoList, setTodoList] = useState([]);\n\n    useEffect(() => {\n      if(localStorage.getItem('todoList')) {\n        setTodoList(JSON.parse(localStorage.getItem('todoList')));\n      }\n    }, [])\n\n\n  const handleClick = () => {\n    if(input) {\n      setTodoList([\n        ...todoList,\n        {\n          id: uuidv4(),\n          text: input,\n          completed: false,\n          creationDate: `${Date.now()}`\n        }\n      ]);\n\n      setInput('');\n    }\n  }\n\n  const handleEnterPress = (e) => {\n    if(e.key === 'Enter') {\n      handleClick();\n    }\n  }\n\n  useEffect(() => {\n    if(todoList.length > 0) {\n      console.log(todoList); \n      localStorage.setItem('todoList', JSON.stringify(todoList));\n    }\n  }, [todoList])\n\n    return <>\n      <TodoCreationWrapperStyled>\n      <TodoAddInput \n        type=\"text\"\n        value={input}\n        onInput={e => setInput(e.target.value)}\n        onKeyDown={handleEnterPress}\n      />\n      {\n        (input.length > 0) ? <AddButton \n        onClick={() => handleClick()}\n      /> : null\n      }\n      </TodoCreationWrapperStyled>\n    </>\n}\n\nexport default TodoCreation;","import styled from 'styled-components';\n\nexport const ModalStyled = styled.div`\n    position: absolute;\n    top:0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n`;\n\nexport const ModalBackgroundStyled = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    opacity: .7;\n`;\n\nexport const ModalBackgroundClickedStyled = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n`;\n\nexport const ModalWindowStyled = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #fff;\n    z-index: 1000;\n    padding: 15px 35px;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (max-width: 768px){\n        width: 80%;\n    }\n\n    @media screen and (max-width: 576px){\n        padding: 15px 25px;\n    }\n`;\n\nexport const CloseWrapperStyled = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nexport const Close = styled.button`\n    border: none;\n    background: none;\n    outline: none;\n    transition: .3s ease all;\n    position: relative;\n    left: 25px;\n    bottom: 5px;\n\n    & > span {\n        font-size: 25px;\n        color: grey;\n    }\n\n    &:hover {\n        opacity: .7;\n    }\n`;\n\nexport const MainStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const MainStyledText = styled.div`\n    font-size: 30px;\n    margin: 0px 0px 15px 0px;\n\n    & > span {\n        font-weight: 500;\n    }\n`;\n\nexport const MainStyledTitle = styled.div`\n    margin: 0px 0px 15px 0px;\n    align-self: flex-start;\n    text-align: left;\n    font-size: 14px;\n    color: #858585;\n\n    & > span {\n        font-style: italic;\n    }\n`;\n\nexport const MainStyledActions = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 120px;\n`;","import React from 'react';\n\nimport Button from '../UI/Button/Button';\n\nimport { ModalBackgroundStyled, ModalStyled, ModalBackgroundClickedStyled, ModalWindowStyled, CloseWrapperStyled, MainStyled, MainStyledText, MainStyledActions, Close, MainStyledTitle } from './Modal.styled';\n\nconst Modal = (props) => {\n    const {open} = props;\n    const {closeBtn} = props;\n    \n    const confirm = () => {\n        props.onConfirm();\n        props.onClose();\n    }\n\n    return open ? <>\n    <ModalStyled>\n        <ModalBackgroundStyled></ModalBackgroundStyled>\n        <ModalBackgroundClickedStyled onClick={props.onClose}></ModalBackgroundClickedStyled>\n            <ModalWindowStyled>\n                    {\n                        closeBtn ? <CloseWrapperStyled>\n                        <Close onClick={props.onClose}>\n                            <span className='icon-cancel-circle'></span>\n                        </Close>\n                    </CloseWrapperStyled> : null\n                    }\n                    <MainStyled>\n                        <MainStyledText>\n                            <span>{props.text}</span>\n                        </MainStyledText>\n                        <MainStyledTitle>\n                            <span>{props.title}</span>\n                        </MainStyledTitle>\n                        <MainStyledActions>\n                            <Button \n                                success\n                                text='Yes'\n                                onClick={confirm}\n                            />\n                            <Button \n                                danger\n                                text='No'\n                                onClick={props.onClose}\n                            />\n                        </MainStyledActions>\n                    </MainStyled>\n            </ModalWindowStyled>\n    </ModalStyled>\n</> : null;\n}\n\nexport default Modal;","import styled from 'styled-components';\n\nexport const TodoListWrapperStyled = styled.div`\n    align-self: flex-start;\n    width: 100%;\n`;\n\nexport const TodoListStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    & > button {\n        align-self: flex-end;\n    }\n`;\n\nexport const TodoListItemStyled = styled.div`\n    font-size: 30px;\n    border-bottom: 1px solid #C5C5C5;\n    padding: 15px 0px;\n\n    &:hover {\n       span{\n           &:nth-child(1) {\n               color: #FF5733;\n           }\n       }\n    }\n\n    & > span {\n        font-weight: 500;\n    }\n\n    @media screen and (max-width: 576px){\n        font-size: 23px;\n    }\n`;\n\nexport const Index = styled.span`\n    color: #A9A9A9;\n    min-width: 30px;\n    display: inline-block;\n`;\n\nexport const Text = styled.span`\n    margin: 0px 0px 0px 10px;\n`;","import React, { useEffect, useState } from 'react';\n\nimport Button from '../UI/Button/Button';\nimport Modal from '../Modal/Modal';\n\nimport { TodoListStyled, TodoListWrapperStyled, TodoListItemStyled, Index, Text } from './TodoList.styled';\n\nconst TodoList = () => {\n    const [todoList, setTodoList] = useState(JSON.parse(localStorage.getItem('todoList')) || []);\n    const [modalIsOpened, setModalIsOpened] = useState(false);\n\n    useEffect(() => {\n        if(localStorage.getItem('todoList')) {\n            setTodoList(JSON.parse(localStorage.getItem('todoList')));\n        } else {\n            setTodoList([]);\n        }\n    }, [localStorage.getItem('todoList')]);\n\n    const handleClearAllClick = () => {\n        setModalIsOpened(true);\n    }\n\n    const closeModal = () => {\n        setModalIsOpened(false);\n    }\n\n    const handleConfirm = () => {\n        localStorage.removeItem('todoList');\n        document.location.reload();\n    }\n\n    return <>\n        <TodoListWrapperStyled>\n           <TodoListStyled>\n               {todoList.length > 0 ? <Button \n                    danger\n                    text={todoList.length > 1 ? 'Clear all' : 'Clear'}\n                    onClick={handleClearAllClick}\n               /> : null}\n               {todoList.map((item, index) => <TodoListItemStyled key={item.id}>\n                   <Index>{index + 1}.</Index>\n                    <Text>{item.text}</Text>\n               </TodoListItemStyled>)}  \n           </TodoListStyled>\n        </TodoListWrapperStyled>\n        <Modal \n            text='Are you sure?'\n            title='If you confirm this action, todo list will be completely deleted'\n            open={modalIsOpened}\n            onClose={closeModal}\n            closeBtn={false}\n            onConfirm={handleConfirm}\n        />\n    </>;\n}\n\nexport default TodoList;","import styled from 'styled-components';\n\nexport const HomePageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n    height: calc(100vh - 20px);\n`;\n\nexport const HomePageHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0px 0px 50px 0px;\n`;\n\nexport const HeaderGreeting = styled.div`\n    & > span {\n        font-size: 30px;\n        font-weight: 700;\n\n        @media screen and (max-width:576px){\n            font-size: 20px;\n        }\n    }\n`;\n\nexport const HeaderTime = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    /* width: 90px; */\n\n    & > span {\n        &:nth-child(1) {\n            color: #FF5733;\n            font-weight: 500;\n            font-size: 20px;\n            margin: 0px 0px 5px 0px;\n            width: 85px;\n\n            @media screen and (max-width: 576px){\n                font-size: 14px;\n                width: 60px;\n            }\n        }\n\n        &:nth-child(2) {\n            color: #858585;\n            font-size: 14px;\n            width: 80px;\n\n            @media screen and (max-width: 576px){\n                font-size: 10px;\n                width: 55px;\n            }\n        }\n    }\n`;\n\nexport const HomePageMain = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;","import React, { useEffect, useState } from 'react';\nimport { useDate } from '../../customHooks/useDate';\n\nimport TodoCreation from \"../TodoCreation/TodoCreation\";\nimport TodoList from '../TodoList/TodoList';\n\nimport { HomePageHeader, HomePageWrapper, HeaderGreeting, HeaderTime, HomePageMain } from './HomePage.styled';\n\nconst HomePage = () => {\n    const [userName, setUserName] = useState('');\n    const {time, fullDate} = useDate();\n\n    useEffect(() => {\n        if(localStorage.getItem('userName')) {\n            setUserName(localStorage.getItem('userName')) \n        }\n    }, []);\n\n    return <>\n        <HomePageWrapper>\n            <HomePageHeader>\n                <HeaderGreeting>\n                <span>\n                    {\n                        userName ? `Hello, ${userName}! 👋` : 'Hello! 👋'\n                    }\n                </span>\n                </HeaderGreeting>\n                <HeaderTime>\n                    <span>{time}</span>\n                    <span>{fullDate}</span>\n                </HeaderTime>\n            </HomePageHeader>\n            <HomePageMain>\n                 <TodoCreation />\n                 <TodoList />\n            </HomePageMain>\n        </HomePageWrapper>\n    </>\n}\n\nexport default HomePage;","import {useEffect, useState} from \"react\";\n\nexport const useDate = () => {\n    const [todayDate, setTodayDate] = useState(new Date());\n  \n    useEffect(() => {\n        const timer = setInterval(() => {\n        setTodayDate(new Date());\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      }\n    }, []);\n  \n    // time\n    const hour = (todayDate.getHours() < 10) ? `0${todayDate.getHours()}` : todayDate.getHours();\n    const minutes = (todayDate.getMinutes() < 10) ? `0${todayDate.getMinutes()}` : todayDate.getMinutes();\n    const seconds = (todayDate.getSeconds() < 10) ? `0${todayDate.getSeconds()}` : todayDate.getSeconds();\n    // date\n    const date = (todayDate.getDate() < 10) ? `0${todayDate.getDate()}` : todayDate.getDate();\n    const month = (todayDate.getMonth() + 1 < 10) ? `0${todayDate.getMonth() + 1}` : todayDate.getMonth() + 1;\n    const fullYear = todayDate.getFullYear();\n  \n    const time = `${hour}:${minutes}:${seconds}`;\n    const fullDate = `${date}/${month}/${fullYear}`\n  \n    return {\n      time,\n      fullDate\n    };\n  };","import React, { useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport IntroductionPage from \"./components/Intro/IntroductionPage\";\n\nimport HomePage from \"./components/Home/HomePage\";\n\nconst App = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if(!localStorage.getItem('skippedIntro') && !localStorage.getItem('userName')) {\n      navigate('/name_creation')\n    }\n  }, [])\n\n  return <>\n    <Routes>\n      <Route path='/name_creation' element={ <IntroductionPage />}></Route>\n      <Route path=\"/\" element={<HomePage />} />\n    </Routes>\n  </>\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\n"],"sourceRoot":""}